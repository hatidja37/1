# Задача "Всё не так уж просто":
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]

# список primes - только простые числа.Простые числа — это натуральные числа, имеющие ровно два различных делителя: единицу и само это число
primes=[]
# список not_primes - все не простые числа.
not_primes=[]
is_prime = True
for i in range(len(numbers)):
    # number=numbers[i]
    if is_prime (number):
        print(f"{number} - простое число.")
    else:
        print(f"{number} - составное число.")
        # print()
    # if number <=1
    #     continue
    # if number % number = 0
    # for j in
    # if number %

if n <= 1:
    False
Источник - Онлайн школа Skysmart: https://skysmart.ru/articles/programming/proverka-chisla-na-prostotu-v-python
print(primes)
print(not_primes)

#is_prime True
# number = int(input("Введите число: "))
# if is_prime(number):
#     print(f"{number} - простое число.")
# else:
#     print(f"{number} - составное число.")
# Пункты задачи:


Источник - Онлайн школа Skysmart: https://skysmart.ru/articles/programming/proverka-chisla-na-prostotu-v-python
#
# Создайте пустые списки primes и not_primes.
# При помощи цикла for переберите список numbers.
# Напишите ещё один цикл for (вложенный), где будут подбираться делители для числа из 1ого цикла.
# Отметить простоту числа можно переменной is_prime, записав в неё занчение True перед проверкой.
# В процессе проверки на простоту записывайте числа из списка numbers в списки primes и not_primes в зависимости от значения переменной is_prime после проверки (True - в prime, False - в not_prime).
# Выведите списки primes и not_primes на экран(в консоль).
#
#
# Пример результата выполнения программы:
#
# Исходный код:
#
#  numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
#
# Вывод на консоль:
#
# Primes: [2, 3, 5, 7, 11, 13]
#
# Not Primes: [4, 6, 8, 9, 10, 12, 14, 15]
#
# Примечания:
#
# Учтите, что число 1 не является ни простым, ни составным числом, поэтому оно отсутствует в конечных списках.
# Для проверки на простоту числа вам нужно убедиться, что выбранное число не делиться ни на что в диапазоне от 2 до этого числа(не включительно).
# Попробуйте оптимизировать(ускорить) процесс выяснения простоты числа при помощи оператора break, когда найдёте делитель. (Не обязательно)
# Переменные меняющее своё булевое состояние на противоположное в процессе проверки, как is_prime, в кругах разработчиков называются перменными-флагами(flag).